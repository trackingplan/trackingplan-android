plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

group rootProject.ext.groupId
version "${rootProject.ext.TrackingplanVersion}"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 54
        versionName TrackingplanVersion
        buildConfigField 'String', 'SDK_VERSION', "\"${rootProject.ext.TrackingplanVersion}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    def lifecycle_version = "2.3.1"
    // def work_version = "2.5.0"

    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // implementation "androidx.work:work-runtime:$work_version"
    // implementation "androidx.work:work-multiprocess:$work_version"

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation "androidx.annotation:annotation:1.2.0"

    compileOnly "com.google.firebase:firebase-analytics:19.0.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

task androidJavadoc(type: Javadoc, dependsOn: build) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.source += "$buildDir/generated/source/buildConfig/$variant.name"
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
    options.encoding 'utf-8'
    options {
        addStringOption 'docencoding', 'utf-8'
        addStringOption 'charset', 'utf-8'
    }
}

task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
    from androidJavadoc.destinationDir
    archiveClassifier.set('javadoc')
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

task javaSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

afterEvaluate {
    publishing {
        publications {
            clientSdk(MavenPublication) {
                from components.release

                artifactId = 'sdk'
                artifact androidJavadocJar
                artifact javaSourcesJar

                pom {
                    name = "Trackingplan Android SDK"
                    description = "Library to integrate your Android App with Trackingplan"
                    url = "https://www.trackingplan.com"
                    packaging = "aar"
                    licenses {
                        license {
                            name = "MIT License"
                            url = "http://www.opensource.org/licenses/mit-license.php"
                        }
                    }
                    developers {
                        developer {
                            name = "Jose Padilla"
                            email = "jose@trackingplan.com"
                            organization = "Trackingplan"
                            organizationUrl = "https://www.trackingplan.com"
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/trackingplan/trackingplan-android.git'
                        developerConnection = 'scm:git:ssh://github.com/trackingplan/trackingplan-android.git'
                        url = 'https://github.com/trackingplan/trackingplan-android/tree/main'
                    }
                }
            }
        }
        repositories {
            maven {
                name = "sonatype"

                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}